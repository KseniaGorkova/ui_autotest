{"name": "test_broken_images[hjkl.jpg]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 404\n +  where 404 = <Response [404]>.status_code", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4082a1516f2d6a16d7edb7b0399f2435\")>\nimage = 'hjkl.jpg'\n\n    @allure.testcase('Broken Images')\n    @allure.description('Find broken images')\n    @pytest.mark.parametrize('image', [\"asdf.jpg\", \"hjkl.jpg\", \"img/avatar-blank.jpg\"])\n    def test_broken_images(browser, image):\n        link = f'http://the-internet.herokuapp.com/{image}'\n        result = requests.get(link)\n        with allure.step(\"Check image is right\"):\n>           assert 200 == result.status_code\nE           assert 200 == 404\nE            +  where 404 = <Response [404]>.status_code\n\ntests\\test_ui.py:40: AssertionError"}, "description": "Find broken images", "steps": [{"name": "Check image is right", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 404\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"C:\\Users\\k.gorkova\\ui_autotest\\scr\\tests\\test_ui.py\", line 40, in test_broken_images\n    assert 200 == result.status_code\n"}, "start": 1630418881193, "stop": 1630418881193}], "parameters": [{"name": "image", "value": "'hjkl.jpg'"}], "start": 1630418880960, "stop": 1630418881193, "uuid": "ebe5add5-0a12-4d3e-85aa-85d831824cc2", "historyId": "b88191646773cb89bb948d643053cca5", "testCaseId": "c5ef999aa170daba6abc66ece60a1de8", "fullName": "tests.test_ui#test_broken_images", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "host", "value": "06797-nb"}, {"name": "thread", "value": "26936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}], "links": [{"type": "test_case", "url": "Broken Images", "name": "Broken Images"}]}