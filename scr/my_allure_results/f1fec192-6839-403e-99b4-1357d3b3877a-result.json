{"name": "test_broken_images[asdf.jpg]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 404\n +  where 404 = <Response [404]>.status_code", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cdb070dced04b91e2e16173eea2661d0\")>\nimage = 'asdf.jpg'\n\n    @allure.testcase('Broken Images')\n    @allure.description('Find broken images')\n    @pytest.mark.parametrize('image', [\"asdf.jpg\", \"hjkl.jpg\", \"img/avatar-blank.jpg\"])\n    def test_broken_images(browser, image):\n        link = f'http://the-internet.herokuapp.com/{image}'\n        result = requests.get(link)\n        with allure.step(\"Check image is right\"):\n>           assert 200 == result.status_code\nE           assert 200 == 404\nE            +  where 404 = <Response [404]>.status_code\n\ntests\\test_ui.py:40: AssertionError"}, "description": "Find broken images", "steps": [{"name": "Check image is right", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 404\n +  where 404 = <Response [404]>.status_code\n", "trace": "  File \"C:\\Users\\k.gorkova\\ui_autotest\\scr\\tests\\test_ui.py\", line 40, in test_broken_images\n    assert 200 == result.status_code\n"}, "start": 1630418877758, "stop": 1630418877758}], "parameters": [{"name": "image", "value": "'asdf.jpg'"}], "start": 1630418877495, "stop": 1630418877758, "uuid": "2aee5fd0-ae07-448e-8b04-9e48fb8c62ec", "historyId": "5db1149541b0c1b2bb048598df758c0c", "testCaseId": "c5ef999aa170daba6abc66ece60a1de8", "fullName": "tests.test_ui#test_broken_images", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_ui"}, {"name": "host", "value": "06797-nb"}, {"name": "thread", "value": "26936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui"}], "links": [{"type": "test_case", "url": "Broken Images", "name": "Broken Images"}]}